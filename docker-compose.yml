version: '3'

services:
  golang:
    build:
      dockerfile: Dockerfile
      context: .
    ports:
      - 80:80
    command: sleep 99999
    volumes:
      - ./:/app
    networks:
      - internal
  zookeeper:
    image: 'docker.io/bitnami/zookeeper:3-debian-10'
    ports:
      - '2181:2181'
    volumes:
      - ./data/zookeeper_data:/bitnami
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - internal
    restart: always
  db:
    image: postgres
    restart: always
    shm_size: 128mb
    ports:
      - '5432:5432'
    environment:
      POSTGRES_PASSWORD: root
  kafka:
    image: 'docker.io/bitnami/kafka:2-debian-10'
    ports:
      - '9092:9092'
    volumes:
      - ./data/kafka_data:/bitnami
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_ADVERTISED_HOST_NAME=kafka
      - KAFKA_ADVERTISED_PORT=9092
      - KAFKA_CLIENT_USER=bambo_user
      - KAFKA_CLIENT_PASSWORD=SoftelTeam321!
    depends_on:
      - zookeeper
    networks:
      - internal
  redpanda:
    command:
      - redpanda
      - start
      - --kafka-addr internal://0.0.0.0:9092,external://0.0.0.0:19092
      # Address the broker advertises to clients that connect to the Kafka API.
      # Use the internal addresses to connect to the Redpanda brokers'
      # from inside the same Docker network.
      # Use the external addresses to connect to the Redpanda brokers'
      # from outside the Docker network.
      - --advertise-kafka-addr internal://redpanda:9092,external://localhost:19092
      - --pandaproxy-addr internal://0.0.0.0:8082,external://0.0.0.0:18082
      # Address the broker advertises to clients that connect to the HTTP Proxy.
      - --advertise-pandaproxy-addr internal://redpanda:8082,external://localhost:18082
      - --schema-registry-addr internal://0.0.0.0:8081,external://0.0.0.0:18081
      # Redpanda brokers use the RPC API to communicate with each other internally.
      - --rpc-addr redpanda:33145
      - --advertise-rpc-addr redpanda:33145
      # Tells Seastar (the framework Redpanda uses under the hood) to use 1 core on the system.
      - --smp 1
      # The amount of memory to make available to Redpanda.
      - --memory 1G
      # Mode dev-container uses well-known configuration properties for development in containers.
      - --mode dev-container
      # Enable logs for debugging.
      - --default-log-level=debug
    image: docker.redpanda.com/redpandadata/redpanda:v23.3.6
    container_name: redpanda
    volumes:
      - redpanda:/var/lib/redpanda/data
    networks:
      - internal
    ports:
      - 18081:18081
      - 18082:18082
      - 19092:19092
      - 19644:9644
  console:
      container_name: redpanda-console
      image: docker.redpanda.com/redpandadata/console:v2.4.3
      networks:
        - internal
      entrypoint: /bin/sh
      command: -c 'echo "$$CONSOLE_CONFIG_FILE" > /tmp/config.yml; /app/console'
      environment:
        CONFIG_FILEPATH: /tmp/config.yml
        CONSOLE_CONFIG_FILE: |
          kafka:
            brokers: ["redpanda:9092"]
            schemaRegistry:
              enabled: true
              urls: ["http://redpanda:8081"]
          redpanda:
            adminApi:
              enabled: true
              urls: ["http://redpanda:9644"]
      ports:
        - 8080:8080
      depends_on:
        - redpanda
networks:
  internal:
    driver: bridge
  public:
    driver: bridge
volumes:
  redpanda: null